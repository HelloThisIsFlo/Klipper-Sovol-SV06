######################################
# These macros are set in the slicer #
######################################
[gcode_macro PRINT_BEFORE_LAYER_CHANGE]
gcode:
  ECHO DEBUG="BEFORE_LAYER_CHANGE HEIGHT={ params.HEIGHT } | LAYER={ params.LAYER }"
  # TIMELAPSE_TAKE_FRAME # TODO: Setup


[gcode_macro PRINT_AFTER_LAYER_CHANGE]
gcode:
  ECHO DEBUG="AFTER_LAYER_CHANGE"


[gcode_macro PRINT_BETWEEN_OBJECTS]
gcode:
  ECHO DEBUG="BETWEEN_OBJECTS"


[gcode_macro PRINT_BETWEEN_EXTRUSION_ROLE_CHANGE]
gcode:
  ECHO DEBUG="BETWEEN_EXTRUSION_ROLE_CHANGE"


[gcode_macro PRINT_COLOR_CHANGE]
gcode:
  ECHO DEBUG="COLOR_CHANGE"


[gcode_macro PRINT_PAUSE]
gcode:
  ECHO DEBUG="PAUSE"


[gcode_macro FILAMENT_START]
gcode:
  ECHO DEBUG="FILAMENT_START | FILAMENT={ params.FILAMENT }"


[gcode_macro FILAMENT_END]
gcode:
  ECHO DEBUG="FILAMENT_END"


[gcode_macro PRINT_START]
gcode:
  ECHO DEBUG="PRINT_START | EXTRUDER_TEMP={ params.EXTRUDER_TEMP } | BED_TEMP={ params.BED_TEMP } | MESH_MIN={ params.MESH_MIN } | MESH_MAX={ params.MESH_MAX } | LAYER_COUNT={ params.LAYER_COUNT } | NOZZLE_DIAMETER={ params.NOZZLE_DIAMETER }"

  ##########################################################################################################
  ## Note: Update ESTIMATOR_ADD_TIME in PrusaSlicer 'Start G-code' if adding/removing steps to this macro ##
  ##       Time it from a cold start, so it does G28 and warms up everything                              ##
  ##########################################################################################################

  # TODO: Update w/ Filament sensor init (if needed)
  ## Initialize
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
  CLEAR_PAUSE
  M107; Turn off fan
  G90; Use absolute coordinates
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}
  #BED_MESH_PROFILE LOAD=default
  M190 S{BED_TEMP}; Wait for bed to reach temperature
  BED_MESH_CALIBRATE PROFILE="default"


  ## Preheat
  M140 S{BED_TEMP}
  M104 S{EXTRUDER_TEMP}


  ## Prevent Leaking
  G1 X0 Y-2 Z5 F3000; Move the nozzle near the lip, slightly outside the print area
  G1 Z0.15 F300; Move very close to the bed


  ## Wait for temp
  M190 S{BED_TEMP}; Wait for bed to reach temperature
  M109 S{EXTRUDER_TEMP}; Set and wait for nozzle to reach temperature

  ;PRIME_LINE


[gcode_macro PRINT_END]
gcode:
  ECHO DEBUG="PRINT_END"
  # TODO: Review and tweak this macro based on 'misc-macro' example

  ## Turn off everything
  M140 S0; Turn off the bed
  M104 S0; Turn off the hotend
  M106 S255; Turn on fan to the max (helps cooldown)

  ## Prevent oozing
  G91; Enter relative positioning
  # TODO: Fix the line below, if already at x=0 => will fail 
  G1 X-2 Y-2 E-3 F300; Retract filament (while moving away nozzle)

  ## Present Print
  # TODO: Fix the line below, if already at z near the top (less than 20mm)
  G1 Z100 F3000; Lift nozzle
  G90; Revert to absolute positioning
  G1 X0 Y{ printer.toolhead.axis_maximum.y|float }; Present Print
  M84 X Y E; Disable steppers (except Z)

  ## Stop fan after 15 sec
  G4 S30 ; Wait 15s
  M107 ; Turn off fan

  ## Cleanup state
  CLEAR_PAUSE


##########################################################################################
# These macros override the ones used by Klipper/Mainsail to pause/resume/cancel a print #
##########################################################################################
[gcode_macro PAUSE] # TODO: Review
rename_existing: BASE_PAUSE
gcode:
  ##### set defaults #####
  {% set x = params.X|default(10) %}       #edit to your park position
  {% set y = params.Y|default(170) %}      #edit to your park position
  {% set z = params.Z|default(20)|float %} #edit to your park position
  {% set e = params.E|default(1) %}        #edit to your retract length
  ##### calculate safe lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% set lift_z = z|abs %}
  {% if act_z < (max_z - lift_z) %}
      {% set z_safe = lift_z %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{e} F300
  G1 Z{z_safe}
  G90
  G1 X{x} Y{y} F4000

[gcode_macro RESUME] # TODO: Review
rename_existing: BASE_RESUME
gcode:
  ##### set defaults #####
  {% set e = params.E|default(1) %} #edit to your retract length
  G91
  G1 E{e} F300
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME  

[gcode_macro CANCEL_PRINT] # TODO: Review
rename_existing: BASE_CANCEL_PRINT
gcode:
  PRINT_END
  BASE_CANCEL_PRINT
